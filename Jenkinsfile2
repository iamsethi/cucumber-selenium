pipeline {
    agent any
    stages {
        stage('Pull Latest Image') {
            steps {
                sh 'docker pull iamsethi/cucumber-selenium-docker'
            }
        }
        stage('Run Test') {
            steps {
               script {
 					 def tags = '@regression'
               		 runTests(tags, PIPELINE_ID, 'E2E#', PROFILE, DIRECTORY, MAX_PODS)                    
               	 }
        }
        }
       
        }
        
    environment {
        MAX_PODS = 155
        DIRECTORY = "cucumber-selenium"
        PIPELINE_ID = "${env.BUILD_TAG}"
        PROFILE = "${env.BRANCH_NAME}"
    }
    
    post{
    always
    {
   	archiveArtifacts artifacts: 'chrome/**', fingerprint: true
   	archiveArtifacts artifacts: 'firefox/**', fingerprint: true
    }
    
    }
    
    
}



def runTests(tags, pipelineID, typeOfRun, profile, directory, maxPods) {

 	def suiteRunID = "${pipelineID}-${typeOfRun}"
    echo "SUITE_RUN_ID: ${suiteRunID}\nPROFILE: ${profile}\nPIPELINE_ID: ${pipelineID}"
    sh("bundle install")
    def scenarioRunCmd = "bundle exec rake run_scenario_count[\"${tags}\",${profile}] SUITE_RUN_ID=${suiteRunID}"
    scenarioCmd = sh(returnStdout: true, script: scenarioRunCmd)
	echo("scenarioCmd : ${scenarioCmd}")
	
	//sh(returnStdout: true, script: "bundle exec ruby enqueue_tests.rb ${directory} ${tags}")
	
	
	def stepsForParallel = [:]
    def availablePods = Math.min(scenarioCmd.count.toInteger(), maxPods.toInteger())
            availablePods.times { int i ->
                stepsForParallel["Run${typeOfRun}${i}"] = {
                    node {
						sh("docker run -e HUB_HOST=http://192.168.1.10:4444/wd/hub -e BROWSER=chrome  #{} -v ${WORKSPACE}/chrome:/usr/share/udemy/target iamsethi/cucumber-selenium-docker  org.junit.runner.JUnitCore com.amazon.runner.RunnerTest")
                    }
                }
            }
            parallel stepsForParallel
        } 
    




